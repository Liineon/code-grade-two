# 2023.09.24 栈作业
#include<iostream>
#include<stack>
using namespace std;
int main() {
	ios::sync_with_stdio(false);
	cin.tie(0), cout.tie(0);

	//输入
	string f;
	cin >> f;
	stack<int> fu;
	//max 注意字符和数字转换
	fu.push(f[0]-48);
	int top = fu.top();
	int pr = 0;
	int count = 1;  //计数
	for (int i = 1; i < f.size(); i+=2) {
		if (f[i] == '+') {  //遇到+弹出top相加
			pr = fu.top() + f[i + 1] - 48;
			fu.pop();
			fu.push(pr);
		}
		else {
			pr = f[i + 1] - 48;   //遇到乘直接入栈
			fu.push(pr);
			count++;
		}
	}
	long long max = 1;
	for (int i = 0; i < count; i++) {
		max *= fu.top();
		fu.pop();
	}
	max = max % 870764322;
	//min
	fu.push(f[0]-48);
	count = 1;
	for (int i = 1; i < f.size(); i+=2) {
		if (f[i] == '*') {
			pr = 1;
			pr= (f[i + 1] - 48) * fu.top();
			fu.pop();
			fu.push(pr);
		}
		else {
			pr = f[i + 1] - 48;
			fu.push(pr);
			count++;
		}
	}
	long long min =0 ;
	for (int i = 0; i < count; i++) {
		min += fu.top();
		fu.pop();
	}
	min = min % 870764322;

	cout << max << endl << min;
}
